<?xml version="1.0" encoding="UTF-8"?><xsl:stylesheet version="1.0"	xmlns="http://www.w3.org/1999/xhtml"	xmlns:html="http://www.w3.org/1999/xhtml"	xmlns:xsl="http://www.w3.org/1999/XSL/Transform"	xmlns:dyn="http://exslt.org/dynamic"	xmlns:mtg="http://slothsoft.net/MTG/">		<xsl:import href="/getTemplate.php/mtg/global"/>		<xsl:template match="/">		<html>			<xsl:call-template name="sites.head"/>			<body>				<main class="prerelease">					<h1>Slothsoft's Magic: The Gathering Prereleases</h1>					<xsl:apply-templates select=".//prerelease"/>				</main>			</body>		</html>	</xsl:template>		<xsl:template match="prerelease">		<xsl:variable name="expansion-key" select="@key"/>				<xsl:variable name="search-internal">			<xsl:call-template name="search.internal">				<xsl:with-param name="expansion" select="$expansion-key"/>			</xsl:call-template>		</xsl:variable>		<xsl:variable name="search-external">			<xsl:call-template name="search.external">				<xsl:with-param name="expansion" select="$expansion-key"/>			</xsl:call-template>		</xsl:variable>		<!--<xsl:variable name="searchDocument" select="document($search-internal)"/>-->		<xsl:variable name="searchDocument" select="mtg:cards-by-expansion($expansion-key)"/>		<hr/>		<h2>			<img class="set-symbol" src="/getData.php/mtg/image-rarity?expansion_abbr={@code}&amp;rarity=Mythic" alt="{@code}"/>			<xsl:text>&#160;</xsl:text>			<time><xsl:value-of select="@date"/>:</time>			<xsl:text>&#160;</xsl:text>			<!--<a href="{$search-external}"><xsl:value-of select="@name"/></a>-->			<a href="{@href}" rel="external"><xsl:value-of select="@name"/></a>		</h2>		<!--<xsl:copy-of select="$searchDocument"/>-->		<xsl:apply-templates select="pack">			<xsl:with-param name="searchDocument" select="$searchDocument"/>		</xsl:apply-templates>	</xsl:template>		<xsl:template match="pack">		<xsl:param name="searchDocument"/>		<xsl:variable name="packNode" select="."/><!--[@key = $packNode/color] or (count(color) = 1 and color = 'Colorless')-->		<xsl:variable name="sortList" select="$searchDocument//search/card[dyn:evaluate($packNode/@query)]/type"/>		<xsl:variable name="categoryList" select="$searchDocument//categories/type"/>		<xsl:variable name="mode" select="'view'"/>		<details class="pack">			<summary>				<h3>					<xsl:for-each select="color">						<img src="/getData.php/mtg/image?color={.}" alt="{.}" class="color"/>					</xsl:for-each>					<xsl:value-of select="name"/>				</h3>			</summary>			<div>				<xsl:apply-templates select="description"/>								<xsl:for-each select="$categoryList">					<xsl:variable name="name" select="."/>					<xsl:variable name="cardList" select="$sortList[. = $name]/.."/>					<xsl:if test="count($cardList)">						<details class="category" data-category="{$name}">							<summary>								<xsl:value-of select="$name"/>								<xsl:value-of select="concat(' (', count($cardList), ' cards)')"/>							</summary>							<xsl:call-template name="cardList">								<xsl:with-param name="cardList" select="$cardList"/>								<xsl:with-param name="mode" select="$mode"/>								<xsl:with-param name="open" select="true()"/>							</xsl:call-template>						</details>					</xsl:if>				</xsl:for-each>			</div>		</details>	</xsl:template>		<xsl:template match="description">		<div class="description">			<xsl:for-each select="image">				<xsl:sort select="position()" order="descending" data-type="number"/>				<img src="/getResource.php/mtg/misc/{.}" alt="{.}"/>			</xsl:for-each>			<xsl:for-each select="card">				<xsl:sort select="position()" order="descending" data-type="number"/>				<img src="/getData.php/mtg/image-card?name={.}" alt="{.}"/>			</xsl:for-each>			<xsl:if test="mechanic">				<h4>Key Mechanics:</h4>				<ul>					<xsl:for-each select="mechanic">						<li>							<xsl:value-of select="@name"/>							<xsl:if test="string-length(.)">								<xsl:text> </xsl:text>								<i>(<xsl:value-of select="."/>)</i>							</xsl:if>						</li>					</xsl:for-each>				</ul>			</xsl:if>		</div>	</xsl:template></xsl:stylesheet>
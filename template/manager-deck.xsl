<?xml version="1.0" encoding="UTF-8"?><xsl:stylesheet version="1.0"	xmlns="http://www.w3.org/1999/xhtml"	xmlns:xsl="http://www.w3.org/1999/XSL/Transform"	xmlns:func="http://exslt.org/functions"	xmlns:str="http://exslt.org/strings"	xmlns:mtg="http://slothsoft.net/MTG/"	extension-element-prefixes="func str mtg">		<xsl:import href="/getTemplate.php/mtg/global"/>		<xsl:template match="deck">		<xsl:variable name="cardList" select="card[@active]"/>		<h3>			<xsl:choose>				<xsl:when test="$cardList/@whole-stock">					<xsl:value-of select="concat('', count($cardList), ' different cards, ', sum($cardList/@whole-stock), ' cards total')"/>				</xsl:when>				<xsl:otherwise>					<xsl:value-of select="concat('', count($cardList), ' different cards, ', sum($cardList/@stock), ' cards total')"/>				</xsl:otherwise>			</xsl:choose>		</h3>		<xsl:call-template name="cardList">			<xsl:with-param name="cardList" select="$cardList"/>			<xsl:with-param name="mode" select="'manager'"/>			<xsl:with-param name="open" select="true()"/>		</xsl:call-template>	</xsl:template>		<xsl:template match="manager">					<table class="manager">				<thead>					<tr>						<xsl:for-each select="deck[@manager]">							<xsl:sort select="@manager"/>							<xsl:variable name="position" select="@manager"/>							<td>								<select onchange="MTG.Manager.setCurrentDeck('{$position}', this.value)">									<xsl:for-each select="../deck[not(@manager) or @manager = $position]">										<xsl:sort select="@type" order="descending"/>										<xsl:sort select="@name" order="ascending"/>										<option value="{@index}">											<xsl:if test="@manager = $position">												<xsl:attribute name="selected">selected</xsl:attribute>											</xsl:if>											<xsl:value-of select="@name"/>										</option>									</xsl:for-each>								</select>							</td>						</xsl:for-each>					</tr>					<tr>						<xsl:for-each select="deck[@manager]">							<xsl:sort select="@manager"/>							<xsl:variable name="position" select="@manager"/>							<th>								<a href="{@uri}">									<xsl:value-of select="concat(@name, ': ', @stock, ' cards')"/>								</a>							</th>						</xsl:for-each>					</tr>					<tr>						<xsl:for-each select="deck[@manager]">							<xsl:sort select="@manager"/>							<td>								<xsl:call-template name="filterList">									<xsl:with-param name="deck" select="."/>									<xsl:with-param name="name" select="'type'"/>									<xsl:with-param name="filterList" select="categories/type"/>								</xsl:call-template>							</td>						</xsl:for-each>					</tr>					<tr>						<xsl:for-each select="deck[@manager]">							<xsl:sort select="@manager"/>							<td>								<xsl:call-template name="filterList">									<xsl:with-param name="deck" select="."/>									<xsl:with-param name="name" select="'rarity'"/>									<xsl:with-param name="filterList" select="categories/rarity"/>								</xsl:call-template>							</td>						</xsl:for-each>					</tr>					<tr>						<xsl:for-each select="deck[@manager]">							<xsl:sort select="@manager"/>							<td>								<xsl:call-template name="filterList">									<xsl:with-param name="deck" select="."/>									<xsl:with-param name="name" select="'color'"/>									<xsl:with-param name="filterList" select="categories/color"/>								</xsl:call-template>							</td>						</xsl:for-each>					</tr>					<tr>						<xsl:for-each select="deck[@manager]">							<xsl:sort select="@manager"/>							<td>								<xsl:call-template name="filterList">									<xsl:with-param name="deck" select="."/>									<xsl:with-param name="name" select="'legality'"/>									<xsl:with-param name="filterList" select="categories/legality"/>								</xsl:call-template>							</td>						</xsl:for-each>					</tr>				</thead>				<tbody>					<tr>						<xsl:for-each select="deck[@manager]">							<xsl:sort select="@manager"/>							<td data-deck-no="{@no}">								<xsl:apply-templates select="."/>							</td>						</xsl:for-each>					</tr>				</tbody>			</table>	</xsl:template>		<xsl:template name="filterList">		<xsl:param name="deck"/>		<xsl:param name="name"/>		<xsl:param name="filterList"/>		<ul data-select="{$name}">			<li data-select-index="" data-select-deck="{$deck/@no}">				<xsl:if test="count($filterList[@current]) = 0">					<xsl:attribute name="data-select-current"/>				</xsl:if>				<xsl:text>*</xsl:text>			</li>			<xsl:for-each select="$filterList[position() &lt; 8]">				<li data-select-index="{.}" data-select-deck="{$deck/@no}">					<xsl:if test="@current">						<xsl:attribute name="data-select-current"/>					</xsl:if>					<xsl:value-of select="."/>				</li>			</xsl:for-each>		</ul>	</xsl:template></xsl:stylesheet>